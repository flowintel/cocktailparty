<.simple_form :let={f} for={@changeset} action={@action}>
  <.error :if={@changeset.action}>
    Oops, something went wrong! Please check the errors below.
  </.error>
  <.input field={f[:name]} type="text" label="Name" />
  <.input field={f[:description]} type="text" label="Description" />
  <.input
    field={f[:connection_id]}
    type="select"
    label="Connection"
    options={Enum.map(@connections, fn connection -> {connection.name, connection.id} end)}
  />
  <.input field={f[:type]} type="select" label="Sink type" options={@sink_types} />
  <.input
    field={f[:user_id]}
    type="select"
    label="User"
    options={Enum.map(@users, fn user -> {user.email, user.id} end)}
  />
  <!-- Display Required Fields -->
  <div class="mt-14">
    <!-- Required fields will be displayed here -->
    <dl class="-my-4 divide-y divide-zinc-100">
      <div class="flex gap-4 py-4 sm:gap-8" id="required-fields"></div>
    </dl>
  </div>
  <.input field={f[:config_yaml]} type="textarea" label="Config" />
  <:actions>
    <.button>Save Sink</.button>
  </:actions>
</.simple_form>
<script>
   // Include the connection_sink_types map as a JavaScript variable
   var connectionSinkTypes = <%= raw(Jason.encode!(@connection_sink_types)) %>;

   // Function to update the required fields display based on the selected sink type
   function updateRequiredFields() {
     const connectionId = document.getElementById("sink_connection_id").value;
     const sinkType = document.getElementById("sink_type").value;

     const requiredFieldsDiv = document.getElementById("required-fields");
     requiredFieldsDiv.innerHTML = '';

     if (connectionSinkTypes[connectionId]) {
       const sinkTypeInfo = connectionSinkTypes[connectionId].find(function(item) {
         return item.type === sinkType;
       });

       if (sinkTypeInfo && sinkTypeInfo.required_fields) {
         var heading = document.createElement("dt");
         heading.setAttribute("class", "w-1/4 flex-none text-[0.8125rem] leading-6 text-zinc-500");
         var content = document.createTextNode("Required fields:");
         heading.appendChild(content);
         requiredFieldsDiv.appendChild(heading);

         sinkTypeInfo.required_fields.forEach(function(field) {
           var listItem = document.createElement("dd");
           listItem.setAttribute("class", "text-sm leading-6 text-zinc-700");
           listItem.innerText = field;
           requiredFieldsDiv.appendChild(listItem);
         });
       }
     }
   }

  function updateSinkTypes() {
    const connectionId = this.value;
    const sinkTypeSelect = document.getElementById("sink_type");
    const requiredFieldsDiv = document.getElementById("required-fields");

    // Clear existing options and required fields
    sinkTypeSelect.innerHTML = '';
    requiredFieldsDiv.innerHTML = '';

    if (connectionSinkTypes[connectionId]) {
      // Populate the sink type select with options
      connectionSinkTypes[connectionId].forEach(function(sinkTypeInfo) {
        const option = document.createElement("option");
        option.value = sinkTypeInfo.type;
        option.text = sinkTypeInfo.type;
        sinkTypeSelect.add(option);
      });

      // Select the first sink type and update required fields
      if (sinkTypeSelect.options.length > 0) {
        sinkTypeSelect.selectedIndex = 0;
        updateRequiredFields();
      }
    } else {
      // If no sink types are available, show a message or disable the select
      const option = document.createElement("option");
      option.text = "No sink types available";
      option.disabled = true;
      sinkTypeSelect.add(option);
    }
   }
   // Event listener for when the connection selection changes
   document.getElementById("sink_connection_id").addEventListener("change", updateSinkTypes);
   // Event listener for when the sink type selection changes
   document.getElementById("sink_type").addEventListener("change", updateRequiredFields);
   document.getElementById("sink_connection_id").selectedIndex = 0;
   const event = new Event("change");
   document.getElementById("sink_connection_id").dispatchEvent(event);
</script>
